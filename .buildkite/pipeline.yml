steps:
  - label: "fossa analyze"
    agents:
      queue: "buildkite-gcp-medium"
    command: ".buildkite/scripts/fossa.sh"

  # - label: ":golang: unit-test"
  #   agents:
  #     queue: "buildkite-gcp-large"
  #   commands:
  #     - "make unit_test"
  #     - ".buildkite/scripts/gen_coverage_metadata.sh .build/metadata.txt"
  #   artifact_paths:
  #     - ".build/*/coverage/*.out"
  #     - ".build/cover.out"
  #     - ".build/metadata.txt"
  #   plugins:
  #     - docker-compose#v3.0.0:
  #         run: unit-test
  #         config: docker/buildkite/docker-compose.yml

  # - label: ":golangci-lint: validate code is clean"
  #   agents:
  #     queue: "workers"
  #     docker: "*"
  #   command: "./scripts/golint.sh"
  #   artifact_paths: [ ]
  #   retry:
  #     automatic:
  #       limit: 1
  #   plugins:
  #     - docker-compose#v3.0.0:
  #         run: unit-test
  #         config: docker/buildkite/docker-compose.yml

  # - label: ":golang: integration-test-sticky-off"
  #   agents:
  #     queue: "buildkite-gcp-large"
  #   command: "make integ_test_sticky_off"
  #   artifact_paths:
  #     - ".build/*/coverage/*.out"
  #   retry:
  #     automatic:
  #       limit: 1
  #   plugins:
  #     - docker-compose#v3.0.0:
  #         run: integ-test
  #         config: docker/buildkite/docker-compose.yml

  # - label: ":golang: integration-test-sticky-on"
  #   agents:
  #     queue: "buildkite-gcp-large"
  #   command: "make integ_test_sticky_on"
  #   artifact_paths:
  #     - ".build/*/coverage/*.out"
  #   retry:
  #     automatic:
  #       limit: 1
  #   plugins:
  #     - docker-compose#v3.0.0:
  #         run: integ-test
  #         config: docker/buildkite/docker-compose.yml

  # - label: ":golang: integration-test-grpc-adapter"
  #   agents:
  #     queue: "buildkite-gcp-large"
  #   command: "make integ_test_grpc"
  #   artifact_paths:
  #     - ".build/*/coverage/*.out"
  #   retry:
  #     automatic:
  #       limit: 1
  #   plugins:
  #     - docker-compose#v3.0.0:
  #         run: integ-test-grpc
  #         config: docker/buildkite/docker-compose.yml

  # - wait

  - label: ":golang: code-coverage"
    agents:
      queue: "buildkite-gcp-large"
    command: ".buildkite/scripts/gocov.sh"
    plugins:
      - docker-compose#v3.0.0:
          run: coverage-report
          config: docker/buildkite/docker-compose.yml
